{"version":3,"sources":["Components/AddCategory.js","helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","className","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAmB5C,OACI,0BAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAQd,2BACIO,UAAY,WACZC,KAAO,OACPC,MAASV,EACTW,SArBc,SAACR,GACvBF,EAAcE,EAAES,OAAOF,Y,uBCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCCPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAErC,OACI,yBAAKR,UAAY,4CACb,yBAAKsB,IAAMd,EAAKe,IAAOL,IACvB,2BAAIA,KCHHM,EAAU,SAAC,GAAiB,IAAhBlB,EAAe,EAAfA,UAAe,ECDZ,SAACA,GAAe,IAAD,EAEbf,mBAAS,CAC/BsB,KAAM,GACNY,SAAS,IAJ0B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KA0BvC,OAnBAC,qBAAW,WAEPvB,EAAQC,GACHuB,MAAK,SAAAC,GAEFH,EAAS,CACLd,KAAMiB,EACNL,SAAS,SAItB,CAACnB,IAQGoB,EDvBwBK,CAAazB,GAAhCa,EAFwB,EAE7BN,KAAaY,EAFgB,EAEhBA,QAEpB,OACI,oCACI,wBAAIzB,UAAY,aAAaM,GAE5BmB,GAAW,sCAEZ,yBAAKzB,UAAY,aAETmB,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIgB,IAAOhB,EAAIC,IACPD,UEdnBiB,EAAe,WAAM,MAGM1C,mBAAS,CAAC,gBAHhB,mBAGvB2C,EAHuB,KAGX5C,EAHW,KAU9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAiBA,IAC9B,6BAEA,4BAEQ4C,EAAWnB,KAAI,SAAAT,GAAS,OACrB,kBAAC,EAAD,CACA0B,IAAO1B,EACFA,UAAaA,U,MCpBzC6B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.8a705f08.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategorias}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handelInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2) {\r\n            setCategorias(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n\r\n        \r\n    };\r\n\r\n    return (\r\n        <form onSubmit = {handleSubmit}>\r\n            <input \r\n                className = 'buscador'\r\n                type = 'text'\r\n                value = {inputValue}\r\n                onChange = {handelInputChange}\r\n                />\r\n        </form>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired,\r\n}","\r\nexport const getGifs = async(categoria) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=10&api_key=V32lRXuxtdeKEH0hMGtbupiZLALWqLRu`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n};","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n    // console.log(props)\r\n    return (\r\n        <div className = 'card animate__animated animate__bounceIn'>\r\n            <img src ={url} alt = {title} ></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React  from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({categoria}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(categoria);\r\n\r\n    return (\r\n        <>\r\n            <h3 className = 'categoria'>{categoria}</h3> \r\n\r\n            {loading && <p>Loading</p>}\r\n\r\n            <div className = 'card-grid'>\r\n                {\r\n                    images.map( img =>\r\n                        <GifGridItem \r\n                            key = {img.id}\r\n                            {...img}\r\n                        />\r\n                        // <li key = {img.id} >{img.title}</li>       \r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [], \r\n        loading: true,\r\n    }); \r\n\r\n    useEffect( () => {\r\n\r\n        getGifs(categoria)\r\n            .then(imgs => {\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false,\r\n                });\r\n            })\r\n\r\n    }, [categoria]);\r\n\r\n    // useEffect( () => {\r\n    //     getGifs(categoria)\r\n    //         .then(imgs => setImages(imgs));\r\n    // }, [categoria]);\r\n\r\n\r\n    return state;\r\n}\r\n\r\n\r\n","\r\nimport React, { useState } from 'react'\r\nimport { AddCategory } from './Components/AddCategory';\r\nimport { GifGrid } from './Components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categorias = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n    const [categorias, setCategorias] = useState(['Dragon Ball'])\r\n    \r\n    // const handleAdd = () => {\r\n    //     // setCategorias(['HunterXHunter', ...categorias]);\r\n    //     setCategorias(cats => ['HunterXHunter', ...categorias]);\r\n    // };\r\n    \r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>  \r\n            <AddCategory setCategorias = {setCategorias}/>\r\n            <hr></hr>\r\n\r\n            <ol>\r\n                {\r\n                    categorias.map(categoria =>  \r\n                       <GifGrid \r\n                       key = {categoria}\r\n                            categoria = {categoria}\r\n                       /> \r\n                    )\r\n                }\r\n            </ol>  \r\n        </>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { GifExpertApp } from './GifExpertApp';\r\nimport './index.css';\r\n\r\n\r\nReactDOM.render(\r\n    <GifExpertApp />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}